{"version":3,"sources":["FormEdit.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormEdit","state","edit","first","last","temp","onChangeHandler","bind","editHandler","save","cancel","this","setState","prevState","e","target","name","value","className","action","htmlFor","type","onChange","onClick","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAwEeA,E,kDArEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAM,EACNC,MAAO,oBACPC,KAAM,mBACNC,KAAM,CAAEF,MAAO,GAAIC,KAAM,KAG3B,EAAKE,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBACZ,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAZF,E,qDAiBZI,KAAKC,SAAS,CAAEV,MAAOS,KAAKV,MAAMC,S,oCAKlCS,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BX,MAAOW,EAAUX,W,sCAILY,GAIdH,KAAKC,SAAS,CAAEP,KAAK,2BAAMM,KAAKV,MAAMI,MAAlB,kBAAyBS,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,Y,6BAKtEN,KAAKC,SAAS,CAAEV,MAAM,EAAOC,MAAOQ,KAAKV,MAAMI,KAAKF,MAAOC,KAAMO,KAAKV,MAAMI,KAAKD,S,+BAIjF,OAAIO,KAAKV,MAAMC,KAEX,sBAAKgB,UAAU,YAAf,UACE,uBAAMC,OAAO,GAAb,UACE,uBAAOC,QAAQ,GAAf,mBACA,uBAAOJ,KAAK,QAAQK,KAAK,OAAOJ,MAAON,KAAKV,MAAMI,KAAKF,MAAOmB,SAAUX,KAAKL,kBAC7E,uBAAOc,QAAQ,GAAf,kBACA,uBAAOJ,KAAK,OAAOK,KAAK,OAAOJ,MAAON,KAAKV,MAAMI,KAAKD,KAAMkB,SAAUX,KAAKL,qBAE7E,wBAAQY,UAAU,SAASK,QAASZ,KAAKF,KAAzC,kBACA,wBAAQS,UAAU,SAASK,QAASZ,KAAKD,OAAzC,uBAKF,sBAAKQ,UAAU,YAAf,UACE,oEACA,sBAAKA,UAAU,OAAf,UACE,oBAAIM,GAAG,QAAP,SAAgBb,KAAKV,MAAME,QAC3B,oBAAIqB,GAAG,OAAP,SAAeb,KAAKV,MAAMG,UAG5B,wBAAQc,UAAU,kBAAkBK,QAASZ,KAAKH,YAAlD,yB,GA/DaiB,aCSRC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f2be11d.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\n\r\nclass FormEdit extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      edit: false,\r\n      first: \"Placeholder_First\",\r\n      last: \"Placeholder_Last\",\r\n      temp: { first: \"\", last: \"\" }\r\n    }\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this)\r\n    this.editHandler = this.editHandler.bind(this)\r\n    this.save = this.save.bind(this)\r\n    this.cancel = this.cancel.bind(this)\r\n  }\r\n\r\n  cancel() {\r\n    // one time update every few secs\r\n    this.setState({ edit: !this.state.edit })\r\n  }\r\n\r\n  editHandler() {\r\n    // most updated state gauranteed\r\n    this.setState(prevState => ({\r\n      edit: !prevState.edit\r\n    }))\r\n  }\r\n\r\n  onChangeHandler(e) {\r\n    // console.log(e.target)\r\n\r\n    // [] indicates a dynamic key\r\n    this.setState({ temp: { ...this.state.temp, [e.target.name]: e.target.value } })\r\n  }\r\n\r\n  save() {\r\n    // has to be false\r\n    this.setState({ edit: false, first: this.state.temp.first, last: this.state.temp.last })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.edit) {\r\n      return (\r\n        <div className=\"container\">\r\n          <form action=\"\">\r\n            <label htmlFor=\"\">First</label>\r\n            <input name=\"first\" type=\"text\" value={this.state.temp.first} onChange={this.onChangeHandler} />\r\n            <label htmlFor=\"\">Last</label>\r\n            <input name=\"last\" type=\"text\" value={this.state.temp.last} onChange={this.onChangeHandler} />\r\n          </form>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n          <button className=\"button\" onClick={this.cancel}>Cancel</button>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <h1>Form Edit Assignment, Karim Nekzad</h1>\r\n          <div className=\"name\">\r\n            <h1 id=\"first\">{this.state.first}</h1>\r\n            <h1 id=\"last\">{this.state.last}</h1>\r\n          </div>\r\n\r\n          <button className=\"button edit-btn\" onClick={this.editHandler}>Edit</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default FormEdit","import './App.css';\nimport FormEdit from './FormEdit'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormEdit />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}